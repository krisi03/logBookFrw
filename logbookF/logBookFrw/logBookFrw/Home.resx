<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SvUAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="pageSetupDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="pageSetupDialog2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>200, 17</value>
  </metadata>
</root>